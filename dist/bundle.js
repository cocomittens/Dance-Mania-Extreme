/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

var right = new Image();
var left = new Image();
var up = new Image();
var down = new Image();
right.src = "./sprites/arrow_right_note.png";
left.src = "./sprites/arrow_left_note.png";
up.src = "./sprites/arrow_up_note.png";
down.src = "./sprites/arrow_down_note.png";
var song = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, [left], null, [right], null, [down], null, [up], null, [right], null, [left], null, [up], null, [down], null, [left], null, [up], null, [down], null, [right], null, [left], null, [down], null, [right], null, [up], null, [right], null, [down], null, [up], null, [left], null, [right], null, [up], null, [left], null, [down], null, [left], null, [down], null, [up], null, [right], null, [up], null, [down], null, [left], null, null, [right], [down], null, [up], null, [right], null, [left], null, [right], null, [up], null, [down], null, null, [up], [right], null, [up], null, [down], null, [left], null, [down], null, [up], null, [right], null, null, [left], [up], null, [right], null, [left], null, [down], null, [left], null, [right], null, [up], null, null, [down], [left, right], null, [left], [right], [up], [down], [up], [down], [right], null, [left], null, [right], [left], [down], [up], [left, right], null, [right], [down], [left], [up], [left], [up], [down], null, [right], null, [down], [right], [up], [left], [up], null, [down], null, [left], [up, down], [right], [up, down], [down], null, [up], null, [right], [up, down], [left], [up, down], [right], null, [left], null, [down], [left, right], [up], [left, right], [left], null, [right], null, [left, right], null, null, null, [left], null, [right], null, [down], null, [up], null, [down], null, [right], null, [left], null, null, [right], [down], null, [up], null, [right], null, [left], null, [right], null, [up], null, [down], null, null, [up], [right], [down], [up], [left], [right], [up], [left], [down], [left], [up], [down], [right], [left], [down], [right], [up], [right], [up], [down], [left], [right], [left], [up], [down], [left], [down], [up], [right], [left], [right], [down], [left, right]];
var dx = 1;
var ctx;
var notes = [];
var combo = 0;
var CanvasXSize = 600;
var CanvasYSize = 600;
var speed = 1; // lower is faster

var y = 600; // vertical offset

var run;

var drawNote = function drawNote(beat) {
  if (beat) {
    var noteX;
    beat.forEach(function (note) {
      if (note.src.includes('left')) noteX = 100;
      if (note.src.includes('down')) noteX = 200;
      if (note.src.includes('up')) noteX = 300;
      if (note.src.includes('right')) noteX = 400;
      notes.push({
        img: note,
        x: noteX,
        y: 600,
        score: null,
        displayed: 0
      });
    });
  }

  ctx = document.getElementById('canvas').getContext('2d');
  clearInterval(run);
  run = setInterval(function () {
    return draw(notes);
  }, speed);
};

function draw(notes) {
  ctx.font = "30px Helvetica";
  ctx.clearRect(0, 0, 600, 600); // clear the canvas

  if (rightPressed) {
    ctx.drawImage(right_arrow_active, 400, 0);
  } else {
    ctx.drawImage(right_arrow, 400, 0);
  }

  if (upPressed) {
    ctx.drawImage(up_arrow_active, 300, 0);
  } else {
    ctx.drawImage(up_arrow, 300, 0);
  }

  if (downPressed) {
    ctx.drawImage(down_arrow_active, 200, 0);
  } else {
    ctx.drawImage(down_arrow, 200, 0);
  }

  if (leftPressed) {
    ctx.drawImage(left_arrow_active, 100, 0);
  } else {
    ctx.drawImage(left_arrow, 100, 0);
  }

  if (notes.length) {
    notes.forEach(function (note) {
      ctx.drawImage(note.img, note.x, note.y);

      if (note.x === 100 && !note.score && leftPressed) {
        if (note.y <= 30 && note.y >= 25) note.score = 'Bad';
        if (note.y <= 25 && note.y >= 20) note.score = 'OK';
        if (note.y <= 20 && note.y >= 10) note.score = 'Good';
        if (note.y <= 10) note.score = 'Perfect!';
      }

      if (note.x === 200 && !note.score && downPressed) {
        if (note.y <= 30 && note.y >= 25) note.score = 'Bad';
        if (note.y <= 25 && note.y >= 20) note.score = 'OK';
        if (note.y <= 20 && note.y >= 10) note.score = 'Good';
        if (note.y <= 10) note.score = 'Perfect!';
      }

      if (note.x === 300 && !note.score && upPressed) {
        if (note.y <= 30 && note.y >= 25) note.score = 'Bad';
        if (note.y <= 25 && note.y >= 20) note.score = 'OK';
        if (note.y <= 20 && note.y >= 10) note.score = 'Good';
        if (note.y <= 10) note.score = 'Perfect!';
      }

      if (note.x === 400 && !note.score && rightPressed) {
        if (note.y <= 30 && note.y >= 25) note.score = 'Bad';
        if (note.y <= 25 && note.y >= 20) note.score = 'OK';
        if (note.y <= 20 && note.y >= 10) note.score = 'Good';
        if (note.y <= 10) note.score = 'Perfect!';
      }

      if (note.y < 0 && !note.score) {
        note.score = 'Miss';
        combo = 0;
      }

      if (note.score && !note.displayed) {
        if (note.score == 'Good' || note.score == 'Perfect!') combo++;else combo = 0;
      } // Display score for 70 frames


      if (note.score && note.displayed <= 70) {
        ctx.fillText(note.score, 500, 100);
        note.displayed++;
      }

      note.y -= dx;
    });
  }

  var comboText = "combo: ".concat(combo);
  ctx.fillText(comboText, 470, 150);
}

document.querySelectorAll('.button')[0].addEventListener('click', function (event) {
  var menu = document.getElementsByClassName('menuContainer')[0];
  var canvas = document.getElementsByClassName('canvasContainer')[0];
  menu.style.display = 'none';
  canvas.style.display = 'block';
  var audio = new Audio("./songs/ppp.mp3");
  audio.play();
  var bpm = 375;
  drawNote([]);

  var _loop = function _loop(i) {
    var beat = song[i];

    if (beat) {
      setTimeout(function () {
        return drawNote(beat);
      }, i * bpm);
    }
  };

  for (var i = 0; i < song.length; i++) {
    _loop(i);
  }
});
var body = document.getElementsByTagName('body')[0];
var id;

function gameLoop() {
  id = requestAnimationFrame(gameLoop);
}

if (body) {
  body.addEventListener('click', function () {
    cancelAnimationFrame(id);
  });
}

var right_arrow = new Image();
var left_arrow = new Image();
var up_arrow = new Image();
var down_arrow = new Image();
right_arrow.src = "./sprites/arrow_right.png";
left_arrow.src = "./sprites/arrow_left.png";
up_arrow.src = "./sprites/arrow_up.png";
down_arrow.src = "./sprites/arrow_down.png";
var right_arrow_active = new Image();
var left_arrow_active = new Image();
var up_arrow_active = new Image();
var down_arrow_active = new Image();
right_arrow_active.src = "./sprites/arrow_right_active.png";
left_arrow_active.src = "./sprites/arrow_left_active.png";
up_arrow_active.src = "./sprites/arrow_up_active.png";
down_arrow_active.src = "./sprites/arrow_down_active.png";
var upPressed = false;
var downPressed = false;
var rightPressed = false;
var leftPressed = false;
document.addEventListener("keydown", keyDownHandler, false);
document.addEventListener("keyup", keyUpHandler, false);

function keyDownHandler(e) {
  switch (e.key) {
    case "ArrowUp":
      upPressed = true;
      setTimeout(function () {
        return keyUpHandler(e);
      }, 100);
      break;

    case "ArrowDown":
      downPressed = true;
      setTimeout(function () {
        return keyUpHandler(e);
      }, 100);
      break;

    case "ArrowRight":
      rightPressed = true;
      setTimeout(function () {
        return keyUpHandler(e);
      }, 100);
      break;

    case "ArrowLeft":
      leftPressed = true;
      setTimeout(function () {
        return keyUpHandler(e);
      }, 100);
      break;
  }
}

function keyUpHandler(e) {
  switch (e.key) {
    case "ArrowUp":
      upPressed = false;
      break;

    case "ArrowDown":
      downPressed = false;
      break;

    case "ArrowRight":
      rightPressed = false;
      break;

    case "ArrowLeft":
      leftPressed = false;
      break;
  }
}

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbInJpZ2h0IiwiSW1hZ2UiLCJsZWZ0IiwidXAiLCJkb3duIiwic3JjIiwic29uZyIsImR4IiwiY3R4Iiwibm90ZXMiLCJjb21ibyIsIkNhbnZhc1hTaXplIiwiQ2FudmFzWVNpemUiLCJzcGVlZCIsInkiLCJydW4iLCJkcmF3Tm90ZSIsImJlYXQiLCJub3RlWCIsImZvckVhY2giLCJub3RlIiwiaW5jbHVkZXMiLCJwdXNoIiwiaW1nIiwieCIsInNjb3JlIiwiZGlzcGxheWVkIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImdldENvbnRleHQiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJkcmF3IiwiZm9udCIsImNsZWFyUmVjdCIsInJpZ2h0UHJlc3NlZCIsImRyYXdJbWFnZSIsInJpZ2h0X2Fycm93X2FjdGl2ZSIsInJpZ2h0X2Fycm93IiwidXBQcmVzc2VkIiwidXBfYXJyb3dfYWN0aXZlIiwidXBfYXJyb3ciLCJkb3duUHJlc3NlZCIsImRvd25fYXJyb3dfYWN0aXZlIiwiZG93bl9hcnJvdyIsImxlZnRQcmVzc2VkIiwibGVmdF9hcnJvd19hY3RpdmUiLCJsZWZ0X2Fycm93IiwibGVuZ3RoIiwiZmlsbFRleHQiLCJjb21ib1RleHQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwibWVudSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJjYW52YXMiLCJzdHlsZSIsImRpc3BsYXkiLCJhdWRpbyIsIkF1ZGlvIiwicGxheSIsImJwbSIsImkiLCJzZXRUaW1lb3V0IiwiYm9keSIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiaWQiLCJnYW1lTG9vcCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwia2V5RG93bkhhbmRsZXIiLCJrZXlVcEhh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QUFELENBQWxCO0FBQUEsT0FBRCxFQUF3QixHQUF4QixDQUFWO0FBQ0E7QUFoQlI7QUFrQkg7O0FBRUQsU0FBU0QsWUFBVCxDQUFzQkMsQ0FBdEIsRUFBeUI7QUFDckIsVUFBUUEsQ0FBQyxDQUFDQyxHQUFWO0FBQ0ksU0FBSyxTQUFMO0FBQ0luQyxlQUFTLEdBQUcsS0FBWjtBQUNBOztBQUNKLFNBQUssV0FBTDtBQUNJRyxpQkFBVyxHQUFHLEtBQWQ7QUFDQTs7QUFDSixTQUFLLFlBQUw7QUFDSVAsa0JBQVksR0FBRyxLQUFmO0FBQ0E7O0FBQ0osU0FBSyxXQUFMO0FBQ0lVLGlCQUFXLEdBQUcsS0FBZDtBQUNBO0FBWlI7QUFjSCxDIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vc3JjL2luZGV4LmpzXCIpO1xuIiwibGV0IHJpZ2h0ID0gbmV3IEltYWdlKCk7XG5sZXQgbGVmdCA9IG5ldyBJbWFnZSgpO1xubGV0IHVwID0gbmV3IEltYWdlKCk7XG5sZXQgZG93biA9IG5ldyBJbWFnZSgpO1xuXG5yaWdodC5zcmMgPSBcIi4vc3ByaXRlcy9hcnJvd19yaWdodF9ub3RlLnBuZ1wiO1xubGVmdC5zcmMgPSBcIi4vc3ByaXRlcy9hcnJvd19sZWZ0X25vdGUucG5nXCI7XG51cC5zcmMgPSBcIi4vc3ByaXRlcy9hcnJvd191cF9ub3RlLnBuZ1wiO1xuZG93bi5zcmMgPSBcIi4vc3ByaXRlcy9hcnJvd19kb3duX25vdGUucG5nXCI7XG5cbmxldCBzb25nID0gW1xuICAgIG51bGwsIG51bGwsIG51bGwsIG51bGwsXG4gICAgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCxcbiAgICBudWxsLCBudWxsLCBudWxsLCBudWxsLFxuICAgIG51bGwsIG51bGwsIG51bGwsIG51bGwsXG4gICAgW2xlZnRdLCBudWxsLCBbcmlnaHRdLCBudWxsLFxuICAgIFtkb3duXSwgbnVsbCwgW3VwXSwgbnVsbCxcbiAgICBbcmlnaHRdLCBudWxsLCBbbGVmdF0sIG51bGwsXG4gICAgW3VwXSwgbnVsbCwgW2Rvd25dLCBudWxsLFxuICAgIFtsZWZ0XSwgbnVsbCwgW3VwXSwgbnVsbCxcbiAgICBbZG93bl0sIG51bGwsIFtyaWdodF0sIG51bGwsXG4gICAgW2xlZnRdLCBudWxsLCBbZG93bl0sIG51bGwsXG4gICAgW3JpZ2h0XSwgbnVsbCwgW3VwXSwgbnVsbCxcbiAgICBbcmlnaHRdLCBudWxsLCBbZG93bl0sIG51bGwsXG4gICAgW3VwXSwgbnVsbCwgW2xlZnRdLCBudWxsLFxuICAgIFtyaWdodF0sIG51bGwsIFt1cF0sIG51bGwsXG4gICAgW2xlZnRdLCBudWxsLCBbZG93bl0sIG51bGwsXG4gICAgW2xlZnRdLCBudWxsLCBbZG93bl0sIG51bGwsXG4gICAgW3VwXSwgbnVsbCwgW3JpZ2h0XSwgbnVsbCxcbiAgICBbdXBdLCBudWxsLCBbZG93bl0sIG51bGwsXG4gICAgW2xlZnRdLCBudWxsLCBudWxsLCBbcmlnaHRdLFxuICAgIFtkb3duXSwgbnVsbCwgW3VwXSwgbnVsbCxcbiAgICBbcmlnaHRdLCBudWxsLCBbbGVmdF0sIG51bGwsXG4gICAgW3JpZ2h0XSwgbnVsbCwgW3VwXSwgbnVsbCxcbiAgICBbZG93bl0sIG51bGwsIG51bGwsIFt1cF0sXG4gICAgW3JpZ2h0XSwgbnVsbCwgW3VwXSwgbnVsbCxcbiAgICBbZG93bl0sIG51bGwsIFtsZWZ0XSwgbnVsbCxcbiAgICBbZG93bl0sIG51bGwsIFt1cF0sIG51bGwsXG4gICAgW3JpZ2h0XSwgbnVsbCwgbnVsbCwgW2xlZnRdLFxuICAgIFt1cF0sIG51bGwsIFtyaWdodF0sIG51bGwsXG4gICAgW2xlZnRdLCBudWxsLCBbZG93bl0sIG51bGwsXG4gICAgW2xlZnRdLCBudWxsLCBbcmlnaHRdLCBudWxsLFxuICAgIFt1cF0sIG51bGwsIG51bGwsIFtkb3duXSxcbiAgICBbbGVmdCwgcmlnaHRdLCBudWxsLCBbbGVmdF0sIFtyaWdodF0sXG4gICAgW3VwXSwgW2Rvd25dLCBbdXBdLCBbZG93bl0sXG4gICAgW3JpZ2h0XSwgbnVsbCwgW2xlZnRdLCBudWxsLFxuICAgIFtyaWdodF0sIFtsZWZ0XSwgW2Rvd25dLCBbdXBdLFxuICAgIFtsZWZ0LCByaWdodF0sIG51bGwsIFtyaWdodF0sIFtkb3duXSxcbiAgICBbbGVmdF0sIFt1cF0sIFtsZWZ0XSwgW3VwXSxcbiAgICBbZG93bl0sIG51bGwsIFtyaWdodF0sIG51bGwsXG4gICAgW2Rvd25dLCBbcmlnaHRdLCBbdXBdLCBbbGVmdF0sXG4gICAgW3VwXSwgbnVsbCwgW2Rvd25dLCBudWxsLFxuICAgIFtsZWZ0XSwgW3VwLCBkb3duXSwgW3JpZ2h0XSwgW3VwLCBkb3duXSxcbiAgICBbZG93bl0sIG51bGwsIFt1cF0sIG51bGwsXG4gICAgW3JpZ2h0XSwgW3VwLCBkb3duXSwgW2xlZnRdLCBbdXAsIGRvd25dLFxuICAgIFtyaWdodF0sIG51bGwsIFtsZWZ0XSwgbnVsbCxcbiAgICBbZG93bl0sIFtsZWZ0LCByaWdodF0sIFt1cF0sIFtsZWZ0LCByaWdodF0sXG4gICAgW2xlZnRdLCBudWxsLCBbcmlnaHRdLCBudWxsLFxuICAgIFtsZWZ0LCByaWdodF0sIG51bGwsIG51bGwsIG51bGwsXG4gICAgW2xlZnRdLCBudWxsLCBbcmlnaHRdLCBudWxsLFxuICAgIFtkb3duXSwgbnVsbCwgW3VwXSwgbnVsbCxcbiAgICBbZG93bl0sIG51bGwsIFtyaWdodF0sIG51bGwsXG4gICAgW2xlZnRdLCBudWxsLCBudWxsLCBbcmlnaHRdLFxuICAgIFtkb3duXSwgbnVsbCwgW3VwXSwgbnVsbCxcbiAgICBbcmlnaHRdLCBudWxsLCBbbGVmdF0sIG51bGwsXG4gICAgW3JpZ2h0XSwgbnVsbCwgW3VwXSwgbnVsbCxcbiAgICBbZG93bl0sIG51bGwsIG51bGwsIFt1cF0sXG4gICAgW3JpZ2h0XSwgW2Rvd25dLCBbdXBdLCBbbGVmdF0sXG4gICAgW3JpZ2h0XSwgW3VwXSwgW2xlZnRdLCBbZG93bl0sXG4gICAgW2xlZnRdLCBbdXBdLCBbZG93bl0sIFtyaWdodF0sXG4gICAgW2xlZnRdLCBbZG93bl0sIFtyaWdodF0sIFt1cF0sXG4gICAgW3JpZ2h0XSwgW3VwXSwgW2Rvd25dLCBbbGVmdF0sXG4gICAgW3JpZ2h0XSwgW2xlZnRdLCBbdXBdLCBbZG93bl0sXG4gICAgW2xlZnRdLCBbZG93bl0sIFt1cF0sIFtyaWdodF0sXG4gICAgW2xlZnRdLCBbcmlnaHRdLCBbZG93bl0sIFtsZWZ0LCByaWdodF1cblxuXTtcblxubGV0IGR4ID0gMTtcbmxldCBjdHg7XG5sZXQgbm90ZXMgPSBbXTtcbmxldCBjb21ibyA9IDA7XG5cbmxldCBDYW52YXNYU2l6ZSA9IDYwMDtcbmxldCBDYW52YXNZU2l6ZSA9IDYwMDtcbmxldCBzcGVlZCA9IDE7IC8vIGxvd2VyIGlzIGZhc3RlclxubGV0IHkgPSA2MDA7IC8vIHZlcnRpY2FsIG9mZnNldFxubGV0IHJ1bjtcblxubGV0IGRyYXdOb3RlID0gKGJlYXQpID0+IHtcbiAgICBpZihiZWF0KSB7XG4gICAgICAgIGxldCBub3RlWDtcbiAgICAgICAgICAgIGJlYXQuZm9yRWFjaChub3RlID0+IHtcbiAgICAgICAgICAgICAgICBpZiAobm90ZS5zcmMuaW5jbHVkZXMoJ2xlZnQnKSkgbm90ZVggPSAxMDA7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGUuc3JjLmluY2x1ZGVzKCdkb3duJykpIG5vdGVYID0gMjAwO1xuICAgICAgICAgICAgICAgIGlmIChub3RlLnNyYy5pbmNsdWRlcygndXAnKSkgbm90ZVggPSAzMDA7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGUuc3JjLmluY2x1ZGVzKCdyaWdodCcpKSBub3RlWCA9IDQwMDtcbiAgICAgICAgICAgICAgICBub3Rlcy5wdXNoKHsgaW1nOiBub3RlLCBcbiAgICAgICAgICAgICAgICAgICAgeDogbm90ZVgsIFxuICAgICAgICAgICAgICAgICAgICB5OiA2MDAsIFxuICAgICAgICAgICAgICAgICAgICBzY29yZTogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheWVkOiAwXG4gICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjdHggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FudmFzJykuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICBjbGVhckludGVydmFsKHJ1bik7XG4gICAgcnVuID0gc2V0SW50ZXJ2YWwoKCkgPT4gZHJhdyhub3RlcyksIHNwZWVkKTtcbn1cblxuZnVuY3Rpb24gZHJhdyhub3Rlcykge1xuICAgIGN0eC5mb250ID0gXCIzMHB4IEhlbHZldGljYVwiO1xuICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgNjAwLCA2MDApOyAvLyBjbGVhciB0aGUgY2FudmFzXG4gICAgaWYgKHJpZ2h0UHJlc3NlZCkge1xuICAgICAgICBjdHguZHJhd0ltYWdlKHJpZ2h0X2Fycm93X2FjdGl2ZSwgNDAwLCAwKTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAgIGN0eC5kcmF3SW1hZ2UocmlnaHRfYXJyb3csIDQwMCwgMCk7XG4gICAgfVxuICAgIGlmICh1cFByZXNzZWQpIHtcbiAgICAgICAgY3R4LmRyYXdJbWFnZSh1cF9hcnJvd19hY3RpdmUsIDMwMCwgMCk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICBjdHguZHJhd0ltYWdlKHVwX2Fycm93LCAzMDAsIDApO1xuICAgIH1cblxuICAgIGlmIChkb3duUHJlc3NlZCkge1xuICAgICAgICBjdHguZHJhd0ltYWdlKGRvd25fYXJyb3dfYWN0aXZlLCAyMDAsIDApO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgICAgY3R4LmRyYXdJbWFnZShkb3duX2Fycm93LCAyMDAsIDApO1xuICAgIH1cbiAgICBpZiAobGVmdFByZXNzZWQpIHtcbiAgICAgICAgY3R4LmRyYXdJbWFnZShsZWZ0X2Fycm93X2FjdGl2ZSwgMTAwLCAwKTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAgIGN0eC5kcmF3SW1hZ2UobGVmdF9hcnJvdywgMTAwLCAwKTtcbiAgICB9XG5cbiAgICBpZihub3Rlcy5sZW5ndGgpIHtcbiAgICAgICAgbm90ZXMuZm9yRWFjaChub3RlID0+IHtcbiAgICAgICAgICAgIGN0eC5kcmF3SW1hZ2Uobm90ZS5pbWcsIG5vdGUueCwgbm90ZS55KTtcblxuICAgICAgICAgICAgaWYobm90ZS54ID09PSAxMDAgJiYgIW5vdGUuc2NvcmUgJiYgbGVmdFByZXNzZWQpIHtcbiAgICAgICAgICAgICAgICBpZihub3RlLnkgPD0gMzAgJiYgbm90ZS55ID49IDI1KSBub3RlLnNjb3JlID0gJ0JhZCc7XG4gICAgICAgICAgICAgICAgaWYobm90ZS55IDw9IDI1ICYmIG5vdGUueSA+PSAyMCkgbm90ZS5zY29yZSA9ICdPSyc7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGUueSA8PSAyMCAmJiBub3RlLnkgPj0gMTApIG5vdGUuc2NvcmUgPSAnR29vZCc7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGUueSA8PSAxMCkgbm90ZS5zY29yZSA9ICdQZXJmZWN0ISc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChub3RlLnggPT09IDIwMCAmJiAhbm90ZS5zY29yZSAmJiBkb3duUHJlc3NlZCkge1xuICAgICAgICAgICAgICAgIGlmIChub3RlLnkgPD0gMzAgJiYgbm90ZS55ID49IDI1KSBub3RlLnNjb3JlID0gJ0JhZCc7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGUueSA8PSAyNSAmJiBub3RlLnkgPj0gMjApIG5vdGUuc2NvcmUgPSAnT0snO1xuICAgICAgICAgICAgICAgIGlmIChub3RlLnkgPD0gMjAgJiYgbm90ZS55ID49IDEwKSBub3RlLnNjb3JlID0gJ0dvb2QnO1xuICAgICAgICAgICAgICAgIGlmIChub3RlLnkgPD0gMTApIG5vdGUuc2NvcmUgPSAnUGVyZmVjdCEnO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAobm90ZS54ID09PSAzMDAgJiYgIW5vdGUuc2NvcmUgJiYgdXBQcmVzc2VkKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGUueSA8PSAzMCAmJiBub3RlLnkgPj0gMjUpIG5vdGUuc2NvcmUgPSAnQmFkJztcbiAgICAgICAgICAgICAgICBpZiAobm90ZS55IDw9IDI1ICYmIG5vdGUueSA+PSAyMCkgbm90ZS5zY29yZSA9ICdPSyc7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGUueSA8PSAyMCAmJiBub3RlLnkgPj0gMTApIG5vdGUuc2NvcmUgPSAnR29vZCc7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGUueSA8PSAxMCkgbm90ZS5zY29yZSA9ICdQZXJmZWN0ISc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChub3RlLnggPT09IDQwMCAmJiAhbm90ZS5zY29yZSAmJiByaWdodFByZXNzZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAobm90ZS55IDw9IDMwICYmIG5vdGUueSA+PSAyNSkgbm90ZS5zY29yZSA9ICdCYWQnO1xuICAgICAgICAgICAgICAgIGlmIChub3RlLnkgPD0gMjUgJiYgbm90ZS55ID49IDIwKSBub3RlLnNjb3JlID0gJ09LJztcbiAgICAgICAgICAgICAgICBpZiAobm90ZS55IDw9IDIwICYmIG5vdGUueSA+PSAxMCkgbm90ZS5zY29yZSA9ICdHb29kJztcbiAgICAgICAgICAgICAgICBpZiAobm90ZS55IDw9IDEwKSBub3RlLnNjb3JlID0gJ1BlcmZlY3QhJztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG5vdGUueSA8IDAgJiYgIW5vdGUuc2NvcmUpIHtcbiAgICAgICAgICAgICAgICBub3RlLnNjb3JlID0gJ01pc3MnO1xuICAgICAgICAgICAgICAgIGNvbWJvID0gMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG5vdGUuc2NvcmUgJiYgIW5vdGUuZGlzcGxheWVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5vdGUuc2NvcmUgPT0gJ0dvb2QnIHx8IG5vdGUuc2NvcmUgPT0gJ1BlcmZlY3QhJykgY29tYm8rKztcbiAgICAgICAgICAgICAgICBlbHNlIGNvbWJvID0gMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gRGlzcGxheSBzY29yZSBmb3IgNzAgZnJhbWVzXG4gICAgICAgICAgICBpZiAobm90ZS5zY29yZSAmJiBub3RlLmRpc3BsYXllZCA8PSA3MCkge1xuICAgICAgICAgICAgICAgIGN0eC5maWxsVGV4dChub3RlLnNjb3JlLCA1MDAsIDEwMCk7XG4gICAgICAgICAgICAgICAgbm90ZS5kaXNwbGF5ZWQrKztcbiAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICBub3RlLnkgLT0gZHg7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBsZXQgY29tYm9UZXh0ID0gYGNvbWJvOiAke2NvbWJvfWA7XG4gICAgY3R4LmZpbGxUZXh0KGNvbWJvVGV4dCwgNDcwLCAxNTApO1xufVxuXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYnV0dG9uJylbMF0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBsZXQgbWVudSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ21lbnVDb250YWluZXInKVswXTtcbiAgICBsZXQgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY2FudmFzQ29udGFpbmVyJylbMF07XG4gICAgbWVudS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIGNhbnZhcy5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBsZXQgYXVkaW8gPSBuZXcgQXVkaW8oXCIuL3NvbmdzL3BwcC5tcDNcIik7XG4gICAgYXVkaW8ucGxheSgpO1xuICAgIGxldCBicG0gPSAzNzU7XG4gICAgZHJhd05vdGUoW10pO1xuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBzb25nLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBiZWF0ID0gc29uZ1tpXTtcbiAgICAgICAgaWYgKGJlYXQpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gZHJhd05vdGUoYmVhdCksIGkgKiBicG0pO1xuICAgICAgICB9IFxuICAgIH1cbn0pO1xuXG5jb25zdCBib2R5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXTtcbmxldCBpZDtcblxuZnVuY3Rpb24gZ2FtZUxvb3AoKSB7XG4gICAgaWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZ2FtZUxvb3ApXG59XG5pZihib2R5KSB7XG4gICAgYm9keS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoaWQpXG4gICAgfSlcbn1cblxubGV0IHJpZ2h0X2Fycm93ID0gbmV3IEltYWdlKCk7XG5sZXQgbGVmdF9hcnJvdyA9IG5ldyBJbWFnZSgpO1xubGV0IHVwX2Fycm93ID0gbmV3IEltYWdlKCk7XG5sZXQgZG93bl9hcnJvdyA9IG5ldyBJbWFnZSgpO1xuXG5yaWdodF9hcnJvdy5zcmMgPSBcIi4vc3ByaXRlcy9hcnJvd19yaWdodC5wbmdcIjtcbmxlZnRfYXJyb3cuc3JjID0gXCIuL3Nwcml0ZXMvYXJyb3dfbGVmdC5wbmdcIjtcbnVwX2Fycm93LnNyYyA9IFwiLi9zcHJpdGVzL2Fycm93X3VwLnBuZ1wiO1xuZG93bl9hcnJvdy5zcmMgPSBcIi4vc3ByaXRlcy9hcnJvd19kb3duLnBuZ1wiO1xuXG5sZXQgcmlnaHRfYXJyb3dfYWN0aXZlID0gbmV3IEltYWdlKCk7XG5sZXQgbGVmdF9hcnJvd19hY3RpdmUgPSBuZXcgSW1hZ2UoKTtcbmxldCB1cF9hcnJvd19hY3RpdmUgPSBuZXcgSW1hZ2UoKTtcbmxldCBkb3duX2Fycm93X2FjdGl2ZSA9IG5ldyBJbWFnZSgpO1xuXG5yaWdodF9hcnJvd19hY3RpdmUuc3JjID0gXCIuL3Nwcml0ZXMvYXJyb3dfcmlnaHRfYWN0aXZlLnBuZ1wiO1xubGVmdF9hcnJvd19hY3RpdmUuc3JjID0gXCIuL3Nwcml0ZXMvYXJyb3dfbGVmdF9hY3RpdmUucG5nXCI7XG51cF9hcnJvd19hY3RpdmUuc3JjID0gXCIuL3Nwcml0ZXMvYXJyb3dfdXBfYWN0aXZlLnBuZ1wiO1xuZG93bl9hcnJvd19hY3RpdmUuc3JjID0gXCIuL3Nwcml0ZXMvYXJyb3dfZG93bl9hY3RpdmUucG5nXCI7XG5cbmxldCB1cFByZXNzZWQgPSBmYWxzZTtcbmxldCBkb3duUHJlc3NlZCA9IGZhbHNlO1xubGV0IHJpZ2h0UHJlc3NlZCA9IGZhbHNlO1xubGV0IGxlZnRQcmVzc2VkID0gZmFsc2U7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGtleURvd25IYW5kbGVyLCBmYWxzZSk7XG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwga2V5VXBIYW5kbGVyLCBmYWxzZSk7XG5cbmZ1bmN0aW9uIGtleURvd25IYW5kbGVyKGUpIHtcbiAgICBzd2l0Y2ggKGUua2V5KSB7XG4gICAgICAgIGNhc2UgXCJBcnJvd1VwXCI6XG4gICAgICAgICAgICB1cFByZXNzZWQgPSB0cnVlO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiBrZXlVcEhhbmRsZXIoZSksIDEwMCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcIkFycm93RG93blwiOlxuICAgICAgICAgICAgZG93blByZXNzZWQgPSB0cnVlO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiBrZXlVcEhhbmRsZXIoZSksIDEwMCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcIkFycm93UmlnaHRcIjpcbiAgICAgICAgICAgIHJpZ2h0UHJlc3NlZCA9IHRydWU7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IGtleVVwSGFuZGxlcihlKSwgMTAwKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiQXJyb3dMZWZ0XCI6XG4gICAgICAgICAgICBsZWZ0UHJlc3NlZCA9IHRydWU7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IGtleVVwSGFuZGxlcihlKSwgMTAwKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cbn1cblxuZnVuY3Rpb24ga2V5VXBIYW5kbGVyKGUpIHtcbiAgICBzd2l0Y2ggKGUua2V5KSB7XG4gICAgICAgIGNhc2UgXCJBcnJvd1VwXCI6XG4gICAgICAgICAgICB1cFByZXNzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiQXJyb3dEb3duXCI6XG4gICAgICAgICAgICBkb3duUHJlc3NlZCA9IGZhbHNlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJBcnJvd1JpZ2h0XCI6XG4gICAgICAgICAgICByaWdodFByZXNzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiQXJyb3dMZWZ0XCI6XG4gICAgICAgICAgICBsZWZ0UHJlc3NlZCA9IGZhbHNlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=